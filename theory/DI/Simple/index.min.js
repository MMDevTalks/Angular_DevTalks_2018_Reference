"use strict";
var Injector = {
  dependencies: {},
  add: function add(a) {
    this.dependencies[a.name] = a;
  },
  get: function get(a) {
    var b = new a(),
      c = this.resolveDependencies(a);
    return a.apply(b, c), b;
  },
  resolveDependencies: function resolveDependencies(a) {
    var c = this,
      b = this.getArguments(a);
    return b
      .filter(function(d) {
        return !!d;
      })
      .map(function(d) {
        var e = c.dependencies[d];
        if (!e) throw new Error("No token was provided for " + d);
        else return c.dependencies[d];
      })
      .map(function(d) {
        return c.get(d);
      });
  },
  getArguments: function getArguments(a) {
    var b = /^function\s*[^\(]*\(\s*([^\)]*)\)/m,
      c = a
        .toString()
        .match(b)[1]
        .split(",");
    return c;
  }
};
function AuthService(a) {
  this.sayHi = function() {
    console.log(a.getUsers());
  };
}
function UserService() {
  this.getUsers = function() {
    return [1, 2, 3, 4];
  };
}
function Demo(a) {
  (this.AuthService = a),
    (this.execute = function() {
      this.AuthService.sayHi();
    });
}
Injector.add(AuthService), Injector.add(UserService), Injector.add(Demo);
var demo = Injector.get(Demo);
demo.execute();
